public class LoopQueue1<E> {

    private Object data[]= null;
    private int size=0;
    private int front;
    private int rear;
    private int maxSize;

    public LoopQueue1(int initSize){
        //队列初始化
        if(initSize<0){
            throw new RuntimeException("初始化必须大于0");
        }else{
            maxSize=initSize;
            data=new Object[initSize];
            front=0;
            rear=0;
        }
    }
    //判断队列是否为空
    public Boolean empty(){
        return size==0;
    }
    //入队
    public void push(E e){
        if(size==maxSize){
            throw new RuntimeException("队列已满");
        }else{
            data[rear]=e;
            rear=(rear+1)%maxSize;
            size++;
        }
    }
    //出队
    public E poll(){
        if(empty()) {
            throw new RuntimeException("空队列异常");
        }else{
            E value=(E)data[front];
            data[front]=null;
            front=(front+1)%maxSize;
            size--;
            return value;
        }
    }
    //查看队首元素
    public E peek(){
        if(empty()) {
            throw new RuntimeException("空队列异常");
        }else{
            return (E)data[front];
        }
    }
    //清空队列
    public void clear(){
        for(int i=0;i<maxSize;i++){
            data[i]=null;
        }
        size=0;
        rear=0;
        front=0;
    }

    public static void main(String[] args) {
        LoopQueue1<Integer> loopQueue1=new LoopQueue1<>(4);
        loopQueue1.push(1);
        System.out.println(loopQueue1.poll());
        loopQueue1.push(2);
        loopQueue1.push(3);
        loopQueue1.push(4);
        loopQueue1.push(5);
        System.out.println(loopQueue1.poll());
        loopQueue1.clear();
        System.out.println(loopQueue1.poll());
    }
}

